<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peg on Prasanth Janardhanan</title>
    <link>/tags/peg/</link>
    <description>Recent content in Peg on Prasanth Janardhanan</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>Prasanth Janardhanan</copyright>
    <lastBuildDate>Fri, 15 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/peg/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a simple query parser using PEG in Go</title>
      <link>/go/peg-parser-in-go/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      <guid>/go/peg-parser-in-go/</guid>
      <description>&lt;p&gt;In another post, &lt;a href=&#34;../simple-query-parser/&#34;&gt;Simple Query Parser&lt;/a&gt; we had built a simple query parser using &lt;a href=&#34;https://github.com/alecthomas/participle&#34;&gt;Participle&lt;/a&gt; - a parser builder for go lang.&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Parsing_expression_grammar&#34;&gt;Parsing expression grammar (PEG)&lt;/a&gt; is a type of grammar. The advantage of PEG is that it doesn&amp;rsquo;t tolerate ambiguous grammar definitions and so is better in error reporting.&lt;/p&gt;&#xA;&lt;p&gt;The go language port of PEG is &lt;a href=&#34;https://pkg.go.dev/github.com/mna/pigeon&#34;&gt;pigeon&lt;/a&gt;&#xA;The popular Javascript port of PEG is &lt;a href=&#34;https://pegjs.org/documentation&#34;&gt;pegjs&lt;/a&gt;. A good introduction to PEG grammar can be found in the &lt;a href=&#34;https://pegjs.org/documentation&#34;&gt;pegjs documentation&lt;/a&gt; and also &lt;a href=&#34;https://github.com/PhilippeSigaud/Pegged/wiki/PEG-Basics&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
