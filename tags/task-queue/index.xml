<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>task queue on Prasanth Janardhanan</title>
    <link>/tags/task-queue/</link>
    <description>Recent content in task queue on Prasanth Janardhanan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Prasanth Janardhanan</copyright>
    <lastBuildDate>Thu, 10 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/task-queue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Background task processor in Go with persistence support using BadgerDB</title>
      <link>/go/go-task-queue-with-badgerdb-backend/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/go/go-task-queue-with-badgerdb-backend/</guid>
      <description>Goroutines can run tasks concurrently. However, for most practical scenarios, you have to keep track of the status of those tasks. In case the process exited, killed, or power cycled, a mechanism should restart the unfinished tasks. For example, imagine you moved order status emailing to a goroutine. If the process was terminated or restarted we have no way to keep track of the tasks that were in progress. A background task manager can keep track of the task in progress, retry if required, and also manage scheduled and recurring tasks.</description>
    </item>
    
  </channel>
</rss>
